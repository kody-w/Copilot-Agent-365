{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "functionAppName": {
      "type": "string",
      "defaultValue": "[concat('copilot365-', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Name of the Function App (must be globally unique)"
      }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "[concat('st', uniqueString(resourceGroup().id))]",
      "maxLength": 24,
      "metadata": {
        "description": "Storage Account Name (3-24 characters, lowercase and numbers only)"
      }
    },
    "openAIServiceName": {
      "type": "string",
      "defaultValue": "[concat('openai-', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Name for the Azure OpenAI Service (will be created for you)"
      }
    },
    "openAIModelName": {
      "type": "string",
      "defaultValue": "gpt-4o",
      "allowedValues": [
        "gpt-35-turbo",
        "gpt-4",
        "gpt-4-32k",
        "gpt-4o",
        "gpt-4o-mini"
      ],
      "metadata": {
        "description": "Azure OpenAI model to deploy (gpt-4o is latest and recommended)"
      }
    },
    "openAISku": {
      "type": "string",
      "defaultValue": "S0",
      "allowedValues": ["S0"],
      "metadata": {
        "description": "SKU for Azure OpenAI Service"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "eastus",
      "allowedValues": [
        "eastus",
        "eastus2",
        "northcentralus",
        "southcentralus",
        "westus",
        "westus3",
        "australiaeast",
        "canadaeast",
        "francecentral",
        "japaneast",
        "norwayeast",
        "swedencentral",
        "switzerlandnorth",
        "uksouth"
      ],
      "metadata": {
        "description": "Location for all resources (must support Azure OpenAI). Default: East US"
      }
    },
    "repoUrl": {
      "type": "string",
      "defaultValue": "https://github.com/kody-w/Copilot-Agent-365",
      "metadata": {
        "description": "GitHub repository URL (automatically deploys code)"
      }
    },
    "branch": {
      "type": "string",
      "defaultValue": "main",
      "metadata": {
        "description": "GitHub branch to deploy from"
      }
    }
  },
  "variables": {
    "hostingPlanName": "[concat(parameters('functionAppName'), '-plan')]",
    "applicationInsightsName": "[concat(parameters('functionAppName'), '-insights')]",
    "fileShareName": "azfbusinessbot3c92ab",
    "functionAppId": "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]",
    "storageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
    "openAIResourceId": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('openAIServiceName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.CognitiveServices/accounts",
      "apiVersion": "2023-05-01",
      "name": "[parameters('openAIServiceName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('openAISku')]"
      },
      "kind": "OpenAI",
      "properties": {
        "customSubDomainName": "[parameters('openAIServiceName')]",
        "networkAcls": {
          "defaultAction": "Allow"
        },
        "publicNetworkAccess": "Enabled"
      }
    },
    {
      "type": "Microsoft.CognitiveServices/accounts/deployments",
      "apiVersion": "2023-05-01",
      "name": "[concat(parameters('openAIServiceName'), '/gpt-deployment')]",
      "dependsOn": [
        "[variables('openAIResourceId')]"
      ],
      "properties": {
        "model": {
          "format": "OpenAI",
          "name": "[parameters('openAIModelName')]"
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2022-09-01",
      "name": "[parameters('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "supportsHttpsTrafficOnly": true,
        "minimumTlsVersion": "TLS1_2"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices",
      "apiVersion": "2022-09-01",
      "name": "[concat(parameters('storageAccountName'), '/default')]",
      "dependsOn": [
        "[variables('storageAccountId')]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
      "apiVersion": "2022-09-01",
      "name": "[concat(parameters('storageAccountName'), '/default/', variables('fileShareName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/fileServices', parameters('storageAccountName'), 'default')]"
      ],
      "properties": {
        "shareQuota": 5120
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[variables('applicationInsightsName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2022-03-01",
      "name": "[variables('hostingPlanName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic",
        "size": "Y1",
        "family": "Y",
        "capacity": 0
      },
      "kind": "functionapp",
      "properties": {
        "perSiteScaling": false,
        "elasticScaleEnabled": false,
        "maximumElasticWorkerCount": 1,
        "isSpot": false,
        "reserved": true,
        "isXenon": false,
        "hyperV": false,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0,
        "zoneRedundant": false
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2022-03-01",
      "name": "[parameters('functionAppName')]",
      "location": "[parameters('location')]",
      "kind": "functionapp,linux",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[variables('storageAccountId')]",
        "[resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))]",
        "[variables('openAIResourceId')]",
        "[resourceId('Microsoft.CognitiveServices/accounts/deployments', parameters('openAIServiceName'), 'gpt-deployment')]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(variables('storageAccountId'), '2022-09-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(variables('storageAccountId'), '2022-09-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(parameters('functionAppName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "python"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "0"
            },
            {
              "name": "SCM_DO_BUILD_DURING_DEPLOYMENT",
              "value": "true"
            },
            {
              "name": "ENABLE_ORYX_BUILD",
              "value": "true"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))).InstrumentationKey]"
            },
            {
              "name": "AZURE_OPENAI_API_KEY",
              "value": "[listKeys(variables('openAIResourceId'), '2023-05-01').key1]"
            },
            {
              "name": "AZURE_OPENAI_ENDPOINT",
              "value": "[reference(variables('openAIResourceId')).endpoint]"
            },
            {
              "name": "AZURE_OPENAI_API_VERSION",
              "value": "2024-02-01"
            },
            {
              "name": "AZURE_OPENAI_DEPLOYMENT_NAME",
              "value": "gpt-deployment"
            },
            {
              "name": "AZURE_FILES_SHARE_NAME",
              "value": "[variables('fileShareName')]"
            },
            {
              "name": "ASSISTANT_NAME",
              "value": "Copilot Agent 365"
            },
            {
              "name": "CHARACTERISTIC_DESCRIPTION",
              "value": "Enterprise AI assistant integrated with Microsoft 365"
            }
          ],
          "linuxFxVersion": "python|3.11",
          "cors": {
            "allowedOrigins": ["*"],
            "supportCredentials": false
          },
          "use32BitWorkerProcess": false,
          "remoteDebuggingEnabled": false,
          "remoteDebuggingVersion": "VS2022"
        },
        "httpsOnly": true
      }
    },
    {
      "type": "Microsoft.Web/sites/sourcecontrols",
      "apiVersion": "2022-03-01",
      "name": "[concat(parameters('functionAppName'), '/web')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]"
      ],
      "properties": {
        "repoUrl": "[parameters('repoUrl')]",
        "branch": "[parameters('branch')]",
        "isManualIntegration": true,
        "deploymentRollbackEnabled": false,
        "isMercurial": false
      }
    }
  ],
  "outputs": {
    "functionAppName": {
      "type": "string",
      "value": "[parameters('functionAppName')]"
    },
    "functionAppUrl": {
      "type": "string",
      "value": "[concat('https://', reference(variables('functionAppId')).defaultHostName)]"
    },
    "functionEndpoint": {
      "type": "string",
      "value": "[concat('https://', reference(variables('functionAppId')).defaultHostName, '/api/businessinsightbot_function')]"
    },
    "openAIEndpoint": {
      "type": "string",
      "value": "[reference(variables('openAIResourceId')).endpoint]"
    },
    "openAIKey": {
      "type": "string",
      "value": "Key stored securely in Function App settings"
    },
    "instructions": {
      "type": "string",
      "value": "🎉 COMPLETE! Azure OpenAI Service created, GPT-4 deployed, Function App configured, and code deployed from GitHub. Get your function key from: Function App > Functions > businessinsightbot_function > Function Keys"
    }
  }
}